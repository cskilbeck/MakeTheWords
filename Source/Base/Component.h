//////////////////////////////////////////////////////////////////////

#pragma once

//////////////////////////////////////////////////////////////////////

struct Component : RefCount
{
	//////////////////////////////////////////////////////////////////////

	enum eComponentReturnCode
	{
		kBlock,			// process no other Components after me
		kAllow,			// don't block anything
		kAllowNoInput	// allow processing, but nobody else gets any input
	};

	virtual eComponentReturnCode Update() = 0; // return kBlock to halt further processing
	virtual void Draw() = 0;

	//////////////////////////////////////////////////////////////////////

	bool mActive;
	bool mVisible;
	int mZIndex;
	Rect2D mClipRect;
	bool mClipEnabled;

	//////////////////////////////////////////////////////////////////////

	Component(SpriteList *spriteList);
	virtual ~Component();

	//////////////////////////////////////////////////////////////////////

	static void Reorder();		// can't call this during Update()
	static void UpdateAll();
	static void DrawAll();

	//////////////////////////////////////////////////////////////////////

	static list<Component *> sComponents;

	//////////////////////////////////////////////////////////////////////

protected:

	SpriteList *mSpriteList;

};

